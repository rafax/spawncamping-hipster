<?xml version="1.0" encoding="UTF-8"?>
<project name="module_algo" default="compile.module.algo">
  <dirname property="module.algo.basedir" file="${ant.file.module_algo}"/>
  
  <property name="module.jdk.home.algo" value="${jdk.home.1.8}"/>
  <property name="module.jdk.bin.algo" value="${jdk.bin.1.8}"/>
  <property name="module.jdk.classpath.algo" value="jdk.classpath.1.8"/>
  
  <property name="compiler.args.algo" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="algo.output.dir" value="${module.algo.basedir}/../out/production/algo"/>
  <property name="algo.testoutput.dir" value="${module.algo.basedir}/../out/test/algo"/>
  
  <path id="algo.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="algo.module.production.classpath">
    <path refid="${module.jdk.classpath.algo}"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/hamcrest-library-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.11.jar"/>
    <pathelement location="${ds.output.dir}"/>
    <pathelement location="${problems.output.dir}"/>
    <pathelement location="${idea.home}/lib/junit.jar"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
  </path>
  
  <path id="algo.runtime.production.module.classpath">
    <pathelement location="${algo.output.dir}"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/hamcrest-library-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.11.jar"/>
    <path refid="ds.runtime.production.module.classpath"/>
    <path refid="problems.runtime.production.module.classpath"/>
    <pathelement location="${idea.home}/lib/junit.jar"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
  </path>
  
  <path id="algo.module.classpath">
    <path refid="${module.jdk.classpath.algo}"/>
    <pathelement location="${algo.output.dir}"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/hamcrest-library-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.11.jar"/>
    <pathelement location="${ds.testoutput.dir}"/>
    <pathelement location="${ds.output.dir}"/>
    <pathelement location="${problems.testoutput.dir}"/>
    <pathelement location="${problems.output.dir}"/>
    <pathelement location="${idea.home}/lib/junit.jar"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
  </path>
  
  <path id="algo.runtime.module.classpath">
    <pathelement location="${algo.testoutput.dir}"/>
    <pathelement location="${algo.output.dir}"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/hamcrest-library-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.11.jar"/>
    <path refid="ds.runtime.module.classpath"/>
    <path refid="problems.runtime.module.classpath"/>
    <pathelement location="${idea.home}/lib/junit.jar"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.algo">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.algo">
    <patternset refid="excluded.from.module.algo"/>
  </patternset>
  
  <path id="algo.module.sourcepath">
    <dirset dir="${module.algo.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.algo" depends="compile.module.algo.production,compile.module.algo.tests" description="Compile module algo"/>
  
  <target name="compile.module.algo.production" depends="register.custom.compilers,compile.module.ds,compile.module.problems" description="Compile module algo; production classes">
    <mkdir dir="${algo.output.dir}"/>
    <javac2 destdir="${algo.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.algo}/javac">
      <compilerarg line="${compiler.args.algo}"/>
      <bootclasspath refid="algo.module.bootclasspath"/>
      <classpath refid="algo.module.production.classpath"/>
      <src refid="algo.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.algo"/>
    </javac2>
    
    <copy todir="${algo.output.dir}">
      <fileset dir="${module.algo.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.algo.tests" depends="register.custom.compilers,compile.module.algo.production" description="compile module algo; test classes" unless="skip.tests"/>
  
  <target name="clean.module.algo" description="cleanup module">
    <delete dir="${algo.output.dir}"/>
    <delete dir="${algo.testoutput.dir}"/>
  </target>
</project>